#!/bin/sh
#
# Shell script to initialise an AWS terraform project with a S3 backend and
# a DynamoDB table to control state locking.
#
# Copyright 2016-2021, Frederico Martins
#   Author: Frederico Martins <http://github.com/fscm>
#
# SPDX-License-Identifier: MIT
#
# This program is free software. You can use it and/or modify it under the
# terms of the MIT License.
#

set -e

BASENAME=$(basename "$0")

# Variables
ACTION_HELP=0
ACTION_INIT=0
AWS_PROFILE="default"
AWS_REGION=
INITIAL_DIR="$(pwd)"
PROJECT_DIR="$(pwd)"
PROJECT_NAME=

__PROJECT_VARIABLES_FILE__="global-variables.tf"
__TERRAFORM_BASE_FILE__="aws.tf"


# Usage
show_usage() {
  echo "Usage: ${BASENAME} [options] (help|init)"
  echo "  help:"
  echo "    <none>"
  echo "  init:"
  echo "    -d <PATH>     The project root directory (defaults to current location)."
  echo "    -n <NAME>     The environment name."
  echo "    -p <PROFILE>  The AWS cli profile (defaults to 'default')."
  echo "    -r <REGION>   The AWS region (defaults to 'us-east-1')."
}

# Clean up
clean_up() {
  # return to the initial folder
  cd "${INITIAL_DIR}"
}


# Exit trap
trap clean_up EXIT


# Options parsing
while getopts ":d:n:p:r:" opt; do
  case ${opt} in
    d)
      PROJECT_DIR=${OPTARG%/}
      ;;
    n)
      PROJECT_NAME=${OPTARG}
      ;;
    p)
      AWS_PROFILE=${OPTARG}
      ;;
    r)
      AWS_REGION=${OPTARG}
      ;;
    \?)
      echo >&2 "  [ERROR] Invalid option: -${OPTARG}"
      exit 1
      ;;
    :)
      echo >&2 "  [ERROR] Option -${OPTARG} requires an argument"
      exit 2
      ;;
  esac
done

shift $((OPTIND-1))

for command in "${@}"; do
  case "${command}" in
    [Hh][Ee][Ll][Pp])
      ACTION_HELP=1
      ;;
    [Ii][Nn][Ii][Tt])
      ACTION_INIT=1
      ;;
    *)
      echo >&2 "  [WARN] Unknown command '${command}'"
      ;;
  esac
done


# Check arguments
if [ $# -eq 0 ]; then
  show_usage
  exit 3
fi
if [ "$((ACTION_HELP+ACTION_INIT))" -eq 0 ]; then
  show_usage
  exit 0
fi


# === HELP ===
if [ "${ACTION_HELP}" -gt 0 ]; then
  show_usage
  exit 0
fi


# === INIT ===
if [ "${ACTION_INIT}" -gt 0 ]; then

  # Check requirements
  if [ "x${PROJECT_NAME}" = "x" ]; then
    echo >&2 "  [ERROR] The project name (-n) option is mandatory."
    exit 4
  fi
  if [ "x${AWS_REGION}" = "x" ]; then
    AWS_REGION=$(\aws configure get "${AWS_PROFILE}".region)
    if [ "x${AWS_REGION}" = "x" ]; then
      echo >&2 "  [ERROR] The AWS region could not be determined, please use the '-n' option."
      exit 5
    fi
  fi

  # Create the environment directory
  echo "  [INFO] Creating the environment [${PROJECT_NAME}]..."
  if [ -d "${PROJECT_DIR}" ]; then
    mkdir -p "${PROJECT_DIR}/${PROJECT_NAME}"
  else
    echo >&2 "  [ERROR] Project root directory not found (or not a directory)."
    exit 6
  fi
  # Create the 'env' file
  if [ ! -f "${PROJECT_DIR}/${PROJECT_NAME}/.env" ]; then
    printf "export AWS_PROFILE='%s'\nexport AWS_REGION='%s'\n" "${AWS_PROFILE}" "${AWS_REGION}"  > "${PROJECT_DIR}/${PROJECT_NAME}/.env"
  fi
  # Link to the project global variables file
  [ -f "${PROJECT_DIR}/${__PROJECT_VARIABLES_FILE__}" ] && ln -s "../${__PROJECT_VARIABLES_FILE__}" "${PROJECT_DIR}/${PROJECT_NAME}/${__PROJECT_VARIABLES_FILE__}"

  # Create the Terraform template
  echo "  [INFO] Extracting terraform configuration file [${__TERRAFORM_BASE_FILE__}]..."
  __tf_template__="${PROJECT_DIR}/${PROJECT_NAME}/${__TERRAFORM_BASE_FILE__}"
  base64 -d <<EOT > "${__tf_template__}"
IwojIFRlcnJhZm9ybSBzZXR0aW5ncy4KIwp0ZXJyYWZvcm0gewogIHJlcXVpcmVkX3ZlcnNpb24gPSAi
Pj0gMC4xMi4wIgoKICAjLS0jYmFja2VuZCAiczMiIHsKICAjLS0jICBidWNrZXQgICAgICAgICA9ICJT
M19CVUNLRVQiCiAgIy0tIyAgZHluYW1vZGJfdGFibGUgPSAiUFJPSkVDVF9OQU1FLXRmLWxvY2siCiAg
Iy0tIyAga2V5ICAgICAgICAgICAgPSAidGVycmFmb3JtLnRmc3RhdGUiCiAgIy0tIyAgcmVnaW9uICAg
ICAgICAgPSAiQVdTX1JFR0lPTiIKICAjLS0jICBlbmNyeXB0ICAgICAgICA9IHRydWUKICAjLS0jfQp9
CgojCiMgQVdTIFByb3ZpZGVyLgojCnByb3ZpZGVyICJhd3MiIHsKICBhbGlhcyAgICAgICAgICAgICAg
ID0gIkFXU19SRUdJT04iCiAgcHJvZmlsZSAgICAgICAgICAgICA9ICJBV1NfUFJPRklMRSIKICByZWdp
b24gICAgICAgICAgICAgID0gIkFXU19SRUdJT04iCiAgI2FsbG93ZWRfYWNjb3VudF9pZHMgPSBbXQp9
CgojCiMgUzMgc3RhdGUgYnVja2V0LgojCnJlc291cmNlICJhd3NfczNfYnVja2V0IiAidGZfc3RhdGUi
IHsKICBhY2wgICAgICAgICAgID0gInByaXZhdGUiCiAgYnVja2V0ICAgICAgICA9ICJTM19CVUNLRVQi
CiAgZm9yY2VfZGVzdHJveSA9IGZhbHNlCiAgcmVnaW9uICAgICAgICA9ICJBV1NfUkVHSU9OIgoKICBs
aWZlY3ljbGUgewogICAgcHJldmVudF9kZXN0cm95ID0gdHJ1ZQogIH0KCiAgdmVyc2lvbmluZyB7CiAg
ICBlbmFibGVkID0gZmFsc2UKICB9Cn0KCiMKIyBEeW5hbW8gbG9jayBtZWNoYW5pc20uCiMKcmVzb3Vy
Y2UgImF3c19keW5hbW9kYl90YWJsZSIgInRmX2xvY2siIHsKICBoYXNoX2tleSAgICAgICA9ICJMb2Nr
SUQiCiAgbmFtZSAgICAgICAgICAgPSAiUFJPSkVDVF9OQU1FLXRmLWxvY2siCiAgcmVhZF9jYXBhY2l0
eSAgPSAxMAogIHdyaXRlX2NhcGFjaXR5ID0gMTAKCiAgYXR0cmlidXRlIHsKICAgIG5hbWUgPSAiTG9j
a0lEIgogICAgdHlwZSA9ICJTIgogIH0KCiAgbGlmZWN5Y2xlIHsKICAgIHByZXZlbnRfZGVzdHJveSA9
IHRydWUKICB9Cn0K
EOT

  # Updating the Terraform template
  echo "  [INFO] Updating the terraform configuration file [${__TERRAFORM_BASE_FILE__}]..."
  __s3_bucket__="${PROJECT_NAME}-tf-remote-state"
  sed -e "s/AWS_REGION/${AWS_REGION}/g;s/AWS_PROFILE/${AWS_PROFILE}/g;s/S3_BUCKET/${__s3_bucket__}/g;s/PROJECT_NAME/${PROJECT_NAME}/g" "${__tf_template__}" > "${__tf_template__}.new"
  mv "${__tf_template__}.new" "${__tf_template__}"

  # Change into the environment folder
  echo "  [INFO] Changing into the environment folder [${PROJECT_DIR}/${PROJECT_NAME}]..."
  cd "${PROJECT_DIR}/${PROJECT_NAME}"

  # Executing Terraform
  echo "  [INFO] Executing Terraform..."
  terraform init -backend=false -no-color
  terraform plan -out=backend.plan -no-color
  terraform apply -auto-approve -no-color backend.plan
  sed -e 's/#--#//g' "${__tf_template__}" > "${__tf_template__}.new"
  mv "${__tf_template__}.new" "${__tf_template__}"
  echo "yes" | terraform init -reconfigure -auto-approve -no-color

  # Cleaning things up
  echo "  [INFO] Cleaning the environment..."
  rm backend.plan

  # Leaving the environment folder
  echo "  [INFO] Exiting the environment folder..."
  cd "${INITIAL_DIR}"

  # That's all folks
  echo "  [INFO] Environment Created [${PROJECT_NAME}]"
fi

exit 0
